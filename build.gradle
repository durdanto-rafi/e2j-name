
apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '1.0'

repositories {
    mavenCentral()
    maven {
      url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
}

configurations {
  antlr4 {
    description = "ANTLR4"
  }
}

ext {
  antlrVersion = "4.5.1-1"
  antlr = [
    antlrSource: 'src/main/antlr',
    destinationDir: "build/generated-sources/antlr",
    grammarpackage: "tac.language.antlr",
  ]
  mainClassName = "tac.language.App"
}

dependencies {
    compile 'edu.cmu.sphinx:sphinx4-core:5prealpha-SNAPSHOT'
    compile "org.antlr:antlr4-runtime:$antlrVersion"
    compile 'com.ibm.icu:icu4j:56.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.4'
    antlr4 "org.antlr:antlr4:$antlrVersion"
}

sourceSets {
  main {
    java {
      srcDir 'src/main/java'
      srcDir antlr.antlrSource
      srcDir antlr.destinationDir
    }
  }
}

task antlrOutputDir << {
  mkdir(antlr.destinationDir)
}

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
  description = 'Generates Java sources from ANTLR4 grammars.'

  inputs.dir file(antlr.antlrSource)
  //outputs.dir file(antlr.destinationDir)

  def grammars = fileTree(antlr.antlrSource).include('**/*.g4')

  main = 'org.antlr.v4.Tool'
  classpath = configurations.antlr4
  def pkg = antlr.grammarpackage.replaceAll("\\.", "/")
  args = ["-o", "${antlr.destinationDir}/${pkg}"/*, "-atn"*/, "-visitor", "-package", antlr.grammarpackage, grammars.files].flatten()

}

compileJava {
  dependsOn generateGrammarSource
  source antlr.destinationDir
}

clean {
  delete antlr.destinationDir
}

jar {
  manifest { 
    attributes "Main-Class": "$mainClassName"
  }  

  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}
